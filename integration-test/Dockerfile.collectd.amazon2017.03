FROM amazonlinux:2017.03

ENV needed_deps="tar curl"
ENV stage="release"
ENV aws_linux_rpm="SignalFx-collectd-RPMs-AWS_EC2_Linux-${stage}-latest.noarch.rpm"
ENV aws_linux="https://dl.signalfx.com/rpms/SignalFx-rpms/${stage}/${aws_linux_rpm}"
ENV needed_rpm=$aws_linux
ENV needed_rpm_name=$aws_linux_rpm
ENV aws_linux_plugin_rpm="SignalFx-collectd_plugin-RPMs-AWS_EC2_Linux-${stage}-latest.noarch.rpm"
ENV aws_linux_plugin="https://dl.signalfx.com/rpms/SignalFx-rpms/${stage}/${aws_linux_plugin_rpm}"
ENV needed_plugin_rpm=$aws_linux_plugin
ENV needed_plugin_rpm_name=$aws_linux_plugin_rpm
ENV yum_flags="-y"

RUN yum $yum_flags install $needed_deps
RUN printf "Downloading SignalFx RPM %s\n" "$needed_rpm" \
    && curl -sSL $insecure $needed_rpm -o "$needed_rpm_name"
RUN printf "Installing SignalFx RPM\n" \
    && yum $yum_flags install $needed_rpm_name 
RUN rm -f $needed_rpm_name
# RUN type setsebool > /dev/null 2>&1 && setsebool -P collectd_tcp_network_connect on
RUN export EPEL_REPO=$(yum repolist enabled | grep "epel/x86_64")
RUN if [ -n "$EPEL_REPO" ]; then yum_flags="$yum_flags --disablerepo=epel"; fi
RUN printf "Installing collectd\n" \
    && yum $yum_flags install collectd
RUN printf "Installing base-plugins\n" \
    && yum $yum_flags install collectd-disk collectd-write_http

RUN printf "Downloading SignalFx plugin RPM\n" \
    && curl -sSL $insecure $needed_plugin_rpm -o $needed_plugin_rpm_name
RUN printf "Installing SignalFx plugin RPM\n" \
    && yum -y install $needed_plugin_rpm_name
RUN rm -f $needed_plugin_rpm_name
RUN printf "Installing signalfx-collectd-plugin\n" \
    && yum -y install signalfx-collectd-plugin

# add config
ADD integration-test/collectd.conf /etc/collectd.conf

# Debian is super minimalistic
RUN yum install -y nc

CMD /.docker/wait_for_rabbit
ADD integration-test/wait_for_rabbit /.docker/wait_for_rabbit

## The context of the image build should be the root dir of this repo!!
ADD rabbitmq.py metric_info.py /opt/collectd-rabbitmq/
ADD integration-test/20-rabbitmq-test.conf /etc/collectd.d/managed_config/

## Mock up a run.sh file
RUN echo $'#! /bin/bash \nexec collectd -C /etc/collectd.conf -f' > /.docker/run.sh
RUN chmod +x /.docker/run.sh
